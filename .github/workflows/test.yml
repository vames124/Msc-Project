name: Test and Build

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: |
        # Basic linting with built-in tools
        echo "Running basic code quality checks..."
        node -c server/index.js
        node -c client/app.js
        
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Run tests
      run: npm test
      
    - name: Generate test coverage
      run: npm test -- --coverage
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build frontend
      run: npm run build
      
    - name: Verify build output
      run: |
        echo "Verifying build output..."
        ls -la dist/
        test -f dist/index.html
        test -f dist/styles.css
        test -f dist/app.js
        echo "✅ Build verification successful"
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: dist/
        retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run npm audit
      run: npm audit --audit-level moderate
      
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
      continue-on-error: true

  performance-test:
    name: Performance Test
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: dist/
        
    - name: Start server
      run: |
        npm start &
        sleep 10
        
    - name: Run basic performance tests
      run: |
        # Test server startup time
        time curl -f http://localhost:3000/api/health || exit 1
        
        # Test API response time
        time curl -f http://localhost:3000/api/products || exit 1
        
        # Test frontend load time
        time curl -f http://localhost:3000/ || exit 1
        
        echo "✅ Performance tests passed"

  notify:
    name: Notify Test Results
    runs-on: ubuntu-latest
    needs: [test, build, security-scan, performance-test]
    if: always()
    
    steps:
    - name: Notify Success
      if: needs.test.result == 'success' && needs.build.result == 'success' && needs.security-scan.result == 'success' && needs.performance-test.result == 'success'
      run: |
        echo "✅ All tests passed!"
        echo "Test: ${{ needs.test.result }}"
        echo "Build: ${{ needs.build.result }}"
        echo "Security: ${{ needs.security-scan.result }}"
        echo "Performance: ${{ needs.performance-test.result }}"
        
    - name: Notify Failure
      if: needs.test.result == 'failure' || needs.build.result == 'failure' || needs.security-scan.result == 'failure' || needs.performance-test.result == 'failure'
      run: |
        echo "❌ Some tests failed!"
        echo "Test: ${{ needs.test.result }}"
        echo "Build: ${{ needs.build.result }}"
        echo "Security: ${{ needs.security-scan.result }}"
        echo "Performance: ${{ needs.performance-test.result }}"
