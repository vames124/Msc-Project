name: Deploy to AWS

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  EB_APPLICATION_NAME: ecommerce-demo
  EB_ENVIRONMENT_NAME: ecommerce-demo-env
  S3_BUCKET_NAME: ecommerce-demo-ademolaivamos

jobs:
  test-and-deploy:
    name: Test, Scan, and Deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    # - name: Run Trivy vulnerability scan
    #   uses: aquasecurity/trivy-action@v0.29.0
    #   with:
    #     scan-type: fs
    #     input: .
    #     severity: CRITICAL,HIGH
    #     exit-code: 1
    #     format: table
    #     output: trivy-report.txt

    - name: Run tests
      run: npm test

    - name: Build application
      run: npm run build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Create deployment package
      run: |
        mkdir -p deploy-package
        cp server/index.js deploy-package/
        cp package.json deploy-package/
        cp package-lock.json deploy-package/
        cp -r dist deploy-package/
        cd deploy-package && zip -r ../app.zip .

    - name: Deploy to Elastic Beanstalk
      run: |
        aws s3 mb s3://${{ env.S3_BUCKET_NAME }} || true
        aws s3 cp app.zip s3://${{ env.S3_BUCKET_NAME }}/app-${{ github.sha }}.zip
        aws elasticbeanstalk create-application \
          --application-name ${{ env.EB_APPLICATION_NAME }} || true
        aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --version-label ${{ github.sha }} \
          --source-bundle S3Bucket=${{ env.S3_BUCKET_NAME }},S3Key=app-${{ github.sha }}.zip
        aws elasticbeanstalk update-environment \
          --environment-name ${{ env.EB_ENVIRONMENT_NAME }} \
          --version-label ${{ github.sha }} || \
        aws elasticbeanstalk create-environment \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --environment-name ${{ env.EB_ENVIRONMENT_NAME }} \
          --version-label ${{ github.sha }} \
          --solution-stack-name "64bit Amazon Linux 2023 v6.6.5 running Node.js 20"
          --option-settings Namespace=aws:autoscaling:launchconfiguration,OptionName=IamInstanceProfile,Value=EB-EC2 \
          --option-settings Namespace=aws:autoscaling:launchconfiguration,OptionName=InstanceType,Value=t3.micro \
    - name: Get application URL
      run: |
        URL=$(aws elasticbeanstalk describe-environments \
          --environment-names ${{ env.EB_ENVIRONMENT_NAME }} \
          --query 'Environments[0].CNAME' \
          --output text)
        echo "üöÄ Application deployed to: http://$URL"
        echo "üè• Health check: http://$URL/api/health"
